name: Development

on:
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        target: [ x86_64-unknown-linux-gnu ]
        toolchain: [ stable, nightly ]

    steps:
    - uses: actions/checkout@v5

    - name: Install Dependencies
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev

    - name: Setup Rust Toolchain
      uses: hecrj/setup-rust-action@v2
      with:
        rust-version: ${{ matrix.toolchain }}
        targets: ${{ matrix.target }}
        components: rustfmt, clippy

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        prefix-key: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.toolchain }}

    - name: Format Check
      run: cargo fmt --check

    - name: Clippy Check
      run: cargo clippy -- -D warnings

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --verbose
